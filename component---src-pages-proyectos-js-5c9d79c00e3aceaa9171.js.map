{"version":3,"sources":["webpack:///./src/styled/components/containerProject.js","webpack:///./src/styled/components/imageProject.js","webpack:///./src/styled/mediaquerys/overflowMediaquery.js","webpack:///./src/styled/components/overflowProjectImage.js","webpack:///./src/styled/components/linkProjectContainer.js","webpack:///./src/components/proyectos.js","webpack:///./src/pages/proyectos.js"],"names":["styled","div","props","theme","colors","containerImageColor","transition","Img","shadow","css","xs","sm","md","lg","Mediaquery","Link","projects","useStaticQuery","title","Sidebar","style","marginTop","className","sections","map","section","i","key","id","getTitleSection","allStrapiProyectos","nodes","filter","p","categoria","nombre","length","proyecto","to","slug","alt","titulo","fluid","imagen","childImageSharp","role","aria-label"],"mappings":"4KAOeA,YAAOC,IAAtB,sEAAeD,CAAf,qPAGuB,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,sBALzB,4BACX,cAYEC,IAbS,Q,6CCGXN,oBAAOO,KAAtB,+DAAeP,CAAf,sCADqB,OAIfQ,K,YCHSC,gBAAf,0hBAGyCC,IFNf,cCEL,cCYoBC,IFdf,cCEL,cCoBoBC,IFtBf,cCEL,cC4BoBC,KChC1Bb,YAAOC,IAAtB,0EAAeD,CAAf,iJASMc,GCTSd,oBAAOe,QAAtB,2EAAef,CAAf,2B,iFCYe,aAEX,IAAMgB,EAAWC,yBAAe,cAqBhC,OACI,oCACI,kBAAC,IAAD,CAAKC,MAAM,cACX,kBAAC,IAAD,KACI,kBAACC,EAAA,EAAD,MACA,kBAAC,IAAD,KACI,yBAAKC,MAAO,CAAEC,UAAW,QAAUC,UAAU,WACxCC,IAASC,KAAI,SAACC,EAASC,GAAV,mBACV,6BAASC,IAAKD,EAAGE,GAAIH,GACjB,yBAAKH,UAAU,iCACX,kBAAC,IAAD,KAAeO,YAAgBJ,KAEyD,KAA3F,UAAAT,EAASc,0BAAT,mBAA6BC,aAA7B,eAAoCC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,UAAUC,SAAWV,KAASW,QAAhF,UACGpB,EAASc,0BADZ,iBACG,EAA6BC,aADhC,aACG,EAAoCC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,UAAUC,SAAWV,KAASD,KAAI,SAACa,EAAUX,GAAX,eAChF,kBAAC,EAAD,CAAMC,IAAKD,EAAGY,GAAE,cAAgBD,EAASE,MACrC,kBAAC,EAAD,CAAuBZ,IAAKD,EAAI,EAAGJ,UAAU,eACzC,kBAAC,EAAD,CAAckB,IAAKH,EAASI,OAAQnB,UAAU,YAAYoB,MAAK,UAAEL,EAASM,cAAX,iBAAE,EAAiBC,uBAAnB,aAAE,EAAkCF,QACnG,kBAAC,EAAD,CAAUpB,UAAU,sDAChB,wBAAIA,UAAU,sBAAsBe,EAASI,cAIvD,kBAAC,IAAD,CAAenB,UAAU,oBAC3B,qFAA0D,0BAAMuB,KAAK,MAAMC,aAAW,UAA5B,mBC1DnF,4BAAO,kBAAC,EAAD","file":"component---src-pages-proyectos-js-5c9d79c00e3aceaa9171.js","sourcesContent":["import styled from 'styled-components'\nimport transition from '../transitions/colorTransition'\n\n\n// Es e contenedor del listado de proyectos\nexport const paddingimg = \"20px\"\nconst margin = \"20px\"\nexport default styled.div`\n    position:relative;\n    overflow:hidden;\n    background-color:${props => props.theme.colors.containerImageColor};\n    border-radius:10px;\n    padding-right:${paddingimg};\n    padding-left:${paddingimg};\n    padding-top:${paddingimg};\n    padding-bottom:${paddingimg};\n    margin-bottom:${margin};\n    margin-top:${margin};\n    transition:${transition};\n    \n\n    :hover {\n        div.overflow{\n           width:calc(100% - 2*${paddingimg});\n        }\n    }\n`","import styled from 'styled-components'\nimport Img from 'gatsby-image'\nimport shadow from '../components/shadow'\n\n\n// Es la imagen para la lista de proyectos\n\nexport const radius =\"10px\"\nexport default styled(Img)`\n    border-radius:${radius};\n    width:100%;\n    ${shadow};\n`","import {css} from 'styled-components'\nimport {xs, sm, md , lg} from './widths'\nimport {paddingimg} from '../components/containerProject'\nimport {radius} from '../components/imageProject'\n\n\n/*Son los mediaquerys para cambiar el tamalo de mi logo dependiendo del\ntamaÃ±o de la pantalla.*/\nexport default css`\n\n    // xs\n    @media only screen and (max-width: ${xs}) {\n        width:calc(100% - 2*${paddingimg});\n        bottom:${paddingimg};\n        border-bottom-left-radius:${radius};\n        border-bottom-right-radius:${radius};\n    }\n\n    //sm\n    @media only screen and (min-width: ${sm})   {\n        width:calc(100% - 2*${paddingimg});\n        bottom:${paddingimg};\n        border-bottom-left-radius:${radius};\n        border-bottom-right-radius:${radius};\n    }\n\n    //md\n    @media only screen and (min-width: ${md})   {\n        width:calc(100% - 2*${paddingimg});\n        bottom:${paddingimg};\n        border-bottom-left-radius:${radius};\n        border-bottom-right-radius:${radius};\n    }\n\n    // >lg\n    @media only screen and (min-width: ${lg}) {\n        width: 0px;\n        bottom:45%;\n        border-bottom-left-radius:0px;\n        border-bottom-right-radius:0px;\n    }\n\n   \n`","import styled from \"styled-components\";\nimport Mediaquery from  '../mediaquerys/overflowMediaquery'\n\nexport default styled.div`\n    position:absolute;\n    overflow:hidden;\n    height:80px;\n    width: 0px;\n    background-color: rgba(0, 0, 0, 0.5);\n    color:white;\n    bottom:45%;\n    transition:all ease .3s;\n    ${Mediaquery};\n`","import styled from \"styled-components\";\nimport {Link} from 'gatsby'\n\nexport default styled(Link)`\n    text-decoration:none;\n`","import React from 'react'\nimport Grid from '../styled/components/gridProjects'\nimport SEO from './seo'\nimport ContainerImageProject from '../styled/components/containerProject'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport ImageProject from '../styled/components/imageProject'\nimport Overflow from '../styled/components/overflowProjectImage'\nimport Link from '../styled/components/linkProjectContainer'\nimport sections from './sidebar/sections'\nimport getTitleSection from './sidebar/getTitleSection'\nimport Sidebar from './sidebar/Sidebar'\nimport Fade from 'react-reveal/Fade';\nimport SectionTitle from '../styled/components/sectionTitle'\nimport TextContainer from '../styled/components/pContainer'\n\nexport default () => {\n\n    const projects = useStaticQuery(graphql`\n    query {\n        allStrapiProyectos{\n        nodes{\n            titulo\n            descripcion\n            slug\n            categoria {\n                nombre\n            }\n            imagen {\n                childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n        }\n        }\n    }`);\n\n    return (\n        <>\n            <SEO title=\"Proyectos\" />\n            <Grid>\n                <Sidebar />\n                <Fade>\n                    <div style={{ marginTop: \"90px\" }} className=\"content\">\n                        {sections.map((section, i) => (\n                            <section key={i} id={section}>\n                                <div className=\"d-flex justify-content-center\">\n                                    <SectionTitle>{getTitleSection(section)}</SectionTitle>\n                                </div>\n                                {projects.allStrapiProyectos?.nodes?.filter(p => p.categoria.nombre === section).length !== 0 ?\n                                    projects.allStrapiProyectos?.nodes?.filter(p => p.categoria.nombre === section).map((proyecto, i) => (\n                                        <Link key={i} to={`/proyectos/${proyecto.slug}`}>\n                                            <ContainerImageProject key={i + 1} className=\"text-center\">\n                                                <ImageProject alt={proyecto.titulo} className=\"img-fluid\" fluid={proyecto.imagen?.childImageSharp?.fluid} />\n                                                <Overflow className=\"overflow d-flex flex-column justify-content-center\">\n                                                    <h4 className=\"subtitle mx-2 my-2\">{proyecto.titulo}</h4>\n                                                </Overflow>\n                                            </ContainerImageProject>\n                                        </Link>\n                                    )) : (<TextContainer className=\"text-center my-3\">\n                                        <p>AÃºn no hay proyectos de este tipo, me estoy preparando <span role=\"img\" aria-label=\"smiles\">ðŸ˜…ðŸ˜ƒ</span></p>\n                                    </TextContainer>)}\n                            </section>\n                        ))}\n                    </div>\n                </Fade>\n            </Grid>\n        </>\n    )\n}","import React from \"react\";\nimport Proyectos from '../components/proyectos'\n\nexport default () => (<Proyectos/>)"],"sourceRoot":""}