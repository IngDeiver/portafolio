{"version":3,"sources":["webpack:///./src/components/contacto.js","webpack:///./src/pages/contacto.js","webpack:///./src/styled/components/h1404TextContainer.js","webpack:///./src/styled/components/avatarItems.js","webpack:///./src/styled/components/avatarContainer.js","webpack:///./src/components/avatar.js","webpack:///./src/styled/components/pContactContainer.js","webpack:///./src/styled/mediaquerys/logoMediaquery.js","webpack:///./src/styled/components/logo.js","webpack:///./src/components/logo.js","webpack:///./src/components/logoAndTextContainer.js","webpack:///./src/styled/mediaquerys/404Mediaquery.js"],"names":["data","useStaticQuery","title","className","strapiContactos","ciudad","pais","telefono","email","styled","h1","mediaquerys","TitleAvatar","h2","props","theme","colors","activeColor","colorTransition","SubtitleAvatar","h4","Img","shadow","avatar","alt","fluid","strapiSobremis","childImageSharp","p","css","xs","sm","md","lg","img","logoMediaQuerys","logoWhite","logoBlack","isDarkTheme","useContext","ThemeContext","src","fixed","children"],"mappings":"iNASe,aAAO,IAAD,QAEXA,EAAOC,yBAAe,cAW5B,OACI,oCACI,kBAAC,IAAD,CAAKC,MAAM,aACX,kBAAC,IAAD,MACA,yBAAKC,UAAU,iCACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAIA,UAAU,SAAd,uBACA,kBAAC,IAAD,gBAAgBH,EAAKI,uBAArB,aAAgB,EAAsBC,QAAtC,gBAAiDL,EAAKI,uBAAtD,aAAiD,EAAsBE,OACvE,kBAAC,IAAD,KACI,yCADJ,cAC4BN,EAAKI,uBADjC,aAC4B,EAAsBG,UAElD,kBAAC,IAAD,KACI,2CADJ,cAC8BP,EAAKI,uBADnC,aAC8B,EAAsBI,Y,qBC/B5D,4BAAO,kBAAC,IAAD,KAAM,kBAAC,EAAD,S,kCCJ7B,4BAKeC,cAAOC,GAAtB,wEAAeD,CAAf,0BAEIE,M,mFCCSC,EAAcH,UAAOI,GAAV,+EAAGJ,CAAH,+BACZ,SAACK,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,cACzBC,KAEJC,EAAiBV,UAAOW,GAAV,kFAAGX,CAAH,sDAGf,SAACK,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,cACzBC,K,6CCZFT,oBAAOY,KAAtB,qEAAeZ,CAAf,2FAMMa,KCHS,eAAO,IAAD,MACXC,EAAStB,yBAAe,aAe9B,OACI,yBAAKE,UAAU,qEACX,kBAAC,EAAD,CACIqB,IAAI,mBACJC,MAAK,UAAEF,EAAOG,sBAAT,iBAAE,EAAuBH,cAAzB,iBAAE,EAA+BI,uBAAjC,aAAE,EAAgDF,QAC3D,kBAACb,EAAD,CAAaT,UAAU,0BAAvB,2BACA,kBAACgB,EAAD,CAAgBhB,UAAU,wBAA1B,4B,kCC7BZ,4BAIeM,cAAOmB,EAAtB,oEAAenB,CAAf,gCAGME,M,8DCDSkB,gBAAf,0NAGyCC,IAOAC,IAOAC,IAQAC,KC3BzBxB,cAAOyB,IAAvB,uDAAgBzB,CAAhB,SACM0B,I,+FCAS,aAAO,IAAD,EAEYlC,yBAAe,cAAxCmC,EAFa,EAEbA,UAAWC,EAFE,EAEFA,UAqBXC,EAAgBC,qBAAWC,KAA3BF,YAEJ,OACI,yBAAKnC,UAAU,2MAEX,kBAAC,IAAD,CAAMA,UAAU,YAAYsC,IAAMH,EAAoDF,EAAUT,gBAAgBe,MAAMD,IAAtEJ,EAAUV,gBAAgBe,MAAMD,QC3B7E,oBAAEE,EAAF,EAAEA,SAAF,OACX,yBAAKxC,UAAU,mFACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,6DACVwC,M,kCCVb,4BAMed,kBAAf,4OAGyCC,IAMAC,IAKAC,IAMAC","file":"component---src-pages-contacto-js-cd8292d8fab94337333a.js","sourcesContent":["import React from \"react\"\r\nimport SEO from './seo'\r\nimport Avatar from './avatar'\r\nimport LogoAndTextContainer from './logoAndTextContainer'\r\nimport TextContainer from '../styled/components/pContainer'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport Pcontainer from '../styled/components/pContactContainer'\r\nimport H1 from '../styled/components/h1404TextContainer'\r\n// Este es el componente donde hablo sobre mí\r\nexport default () => {\r\n\r\n    const data = useStaticQuery(graphql`\r\n    query {\r\n        strapiContactos(id: {eq: \"Contactos_1\"}) {\r\n          telefono\r\n          email\r\n          pais\r\n          ciudad\r\n        }\r\n      }\r\n    `)\r\n\r\n    return (\r\n        <>\r\n            <SEO title=\"Contacto\" />\r\n            <Avatar />\r\n            <div className=\"d-flex justify-content-center\">\r\n                <LogoAndTextContainer>\r\n                    <TextContainer>\r\n                        <H1 className=\"title\">Comunícate conmingo</H1>\r\n                        <Pcontainer>{`${data.strapiContactos?.ciudad}, ${data.strapiContactos?.pais}`}</Pcontainer>\r\n                        <Pcontainer>\r\n                            <strong>Tel: </strong> {data.strapiContactos?.telefono}\r\n                        </Pcontainer>\r\n                        <Pcontainer>\r\n                            <strong>Email: </strong> {data.strapiContactos?.email}\r\n                        </Pcontainer>\r\n                    </TextContainer>\r\n                </LogoAndTextContainer>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React  from \"react\"\r\nimport Contacto from '../components/contacto'\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nexport default  () => (<Fade><Contacto/></Fade>)","import mediaquerys from '../mediaquerys/404Mediaquery'\r\nimport styled from 'styled-components'\r\n\r\n\r\n// Es el h1 para las paginas 404 y contacto que se entra en pantallas pequeñas\r\nexport default styled.h1`\r\n  text-align:start;\r\n  ${mediaquerys};\r\n`","import styled from \"styled-components\"\r\nimport colorTransition from '../../styled/transitions/colorTransition'\r\n\r\n\r\n/*Componentes del avatar\r\nTitleAvatar. Es mi nombre\r\nSubtitleAvatar: Es la profesión*/\r\n\r\nexport const TitleAvatar = styled.h2`\r\n    color:${(props) => props.theme.colors.activeColor};\r\n    transition:${colorTransition};\r\n`;\r\nexport const SubtitleAvatar = styled.h4`\r\n    /*Donde se encuentra esta propiedad es por que se tiene acceso al tema por medio del themeProvider\r\n    razon por la cual se puede acceder a los colores correspondientes para el tema.*/\r\n    color:${(props) => props.theme.colors.activeColor};\r\n    transition:${colorTransition};\r\n    margin:0px;\r\n    padding:0px;\r\n`;","import styled from \"styled-components\";\r\nimport Img from 'gatsby-image'\r\nimport shadow from '../components/shadow'\r\n\r\nexport default styled(Img)`\r\n    margin-Top:90px;\r\n    border-Radius: 50%;\r\n    width: 200px;\r\n    height:200px;\r\n    border: solid 5px white;\r\n    ${shadow};\r\n`","import React from 'react'\r\nimport {TitleAvatar, SubtitleAvatar} from '../styled/components/avatarItems'\r\nimport {useStaticQuery, graphql} from 'gatsby'\r\nimport Avatar from '../styled/components/avatarContainer'\r\n\r\n\r\n// Es mi foto con nombre y profesion\r\nexport default () => {\r\n    const avatar = useStaticQuery(graphql`\r\n        query avatar {\r\n            strapiSobremis(id: {eq: \"Sobremis_1\"}) {\r\n                descripcion\r\n                avatar {\r\n                childImageSharp {\r\n                    fluid {\r\n                        ...GatsbyImageSharpFluid\r\n                    }\r\n                }\r\n              }\r\n            }\r\n        }\r\n    `)\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column justify-content-center align-items-center mb-2\">\r\n            <Avatar\r\n                alt=\"Deiver Carrascal\"\r\n                fluid={avatar.strapiSobremis?.avatar?.childImageSharp?.fluid} />\r\n            <TitleAvatar className=\"title mt-2 text-center\">Deiver Guerra Carrascal</TitleAvatar>\r\n            <SubtitleAvatar className=\"subtitle text-center\">Est. Ing. de sistemas</SubtitleAvatar>\r\n        </div>\r\n    )\r\n}","import styled from \"styled-components\";\r\nimport mediaquerys from '../mediaquerys/404Mediaquery'\r\n\r\n\r\nexport default styled.p`\r\n    margin:0px;\r\n    padding:0px;\r\n    ${mediaquerys};\r\n`","import {css} from 'styled-components'\r\nimport {xs, sm, md , lg} from './widths'\r\n\r\n\r\n/*Son los mediaquerys para cambiar el tamalo de mi logo dependiendo del\r\ntamaño de la pantalla.*/\r\nexport default css`\r\n\r\n    // xs\r\n    @media only screen and (max-width: ${xs}) {\r\n        &{\r\n            width:55%;\r\n        }\r\n    }\r\n\r\n    //sm\r\n    @media only screen and (min-width: ${sm})   {\r\n        &{\r\n            width:50%;\r\n        }\r\n    }\r\n\r\n    //md\r\n    @media only screen and (min-width: ${md})   {\r\n        \r\n        &{\r\n            width:50%;\r\n        }\r\n    }\r\n\r\n    // >lg\r\n    @media only screen and (min-width: ${lg}) {\r\n        &{\r\n            width:100%;\r\n        }\r\n    }\r\n\r\n   \r\n`","import styled from \"styled-components\"\r\nimport logoMediaQuerys from '../mediaquerys/logoMediaquery'\r\n\r\n// Es el compent de imagen para cargar el logo\r\nexport default  styled.img`\r\n    ${logoMediaQuerys};\r\n`","import React, {useContext} from \"react\";\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport { ThemeContext } from '../context/themeContext'\r\nimport Logo from '../styled/components/logo'\r\n\r\nexport default () => {\r\n    \r\nconst { logoWhite, logoBlack } = useStaticQuery(graphql`\r\nquery {\r\n  logoWhite:file(relativePath: { eq: \"Logo white.png\" }) {\r\n    childImageSharp {\r\n        fixed {\r\n        ...GatsbyImageSharpFixed\r\n        }\r\n    }\r\n  }\r\n\r\n  logoBlack:file(relativePath: { eq: \"Logo black.png\" }) {\r\n    childImageSharp {\r\n        fixed {\r\n        ...GatsbyImageSharpFixed\r\n        }\r\n    }\r\n  }\r\n    \r\n}\r\n`)\r\n\r\nconst { isDarkTheme } = useContext(ThemeContext)\r\n\r\n    return (\r\n        <div className=\"col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 \r\n                        d-flex  justify-content-center mt-md-auto mb-md-auto justify-content-sm-center justify-content-md-center justify-content-lg-end justify-content-xl-end \">\r\n            <Logo className=\"img-fluid\" src={!isDarkTheme ? logoBlack.childImageSharp.fixed.src : logoWhite.childImageSharp.fixed.src}/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport Logo from './logo'\r\n\r\n/*Es el componente que reusuare para cuando necesite agregar el logo con  contenido a la derecha \r\njunto a todas las media querys para el responsive design*/\r\n\r\nexport default ({children}) => (\r\n    <div className=\"d-flex flex-column flex-sm-column flex-md-column flex-lg-row flex-xl-row  mt-4 \">\r\n        <Logo />\r\n        <div className=\"col-12 col-sm-12 col-md-12 col-lg-8 col-xl-8 mt-4 mt-sm-4\">\r\n            {children}\r\n        </div>\r\n    </div>\r\n)","import {css} from 'styled-components'\r\nimport {xs, sm, md , lg} from './widths'\r\n\r\n\r\n/*Son los mediaquerys para cambiar el tamaño del texto de la pagina d404 dependiendo del\r\ntamaño de la pantalla.*/\r\nexport default css`\r\n\r\n    // xs\r\n    @media only screen and (max-width: ${xs}) {\r\n        text-align: center;\r\n\r\n    }\r\n\r\n    //sm\r\n    @media only screen and (min-width: ${sm})   {\r\n        text-align: center;\r\n    }\r\n\r\n    //md\r\n    @media only screen and (min-width: ${md})   {\r\n        text-align: center;\r\n       \r\n    }\r\n\r\n    // >lg\r\n    @media only screen and (min-width: ${lg}) {\r\n        text-align:start;\r\n    }\r\n\r\n   \r\n`"],"sourceRoot":""}