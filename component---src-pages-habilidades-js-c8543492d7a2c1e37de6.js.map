{"version":3,"sources":["webpack:///./src/styled/components/cardSkillContainer.js","webpack:///./src/styled/mediaquerys/imageSkillMediaquery.js","webpack:///./src/styled/components/imageSkill.js","webpack:///./src/styled/mediaquerys/descriptionSkillMediaquery.js","webpack:///./src/styled/components/skillOverflow.js","webpack:///./src/components/habilidades.js","webpack:///./src/pages/habilidades.js"],"names":["styled","div","shadow","props","theme","colors","containerImageColor","transition","css","xs","sm","md","lg","Img","mediaquerys","skillDescriptionColor","query","render","skills","title","Sidebar","haveMain","haveSecundary","style","marginTop","className","id","allStrapiTecnologias","nodes","filter","s","categorias","map","c","nombre","includes","skill","i","key","alt","titulo","fluid","imagen","childImageSharp","descripcion","sections","section","getTitleSection","length","role","aria-label"],"mappings":"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","file":"component---src-pages-habilidades-js-c8543492d7a2c1e37de6.js","sourcesContent":["import styled from \"styled-components\";\nimport shadow from '../components/shadow'\nimport transition from '../transitions/colorTransition'\n\nconst margin = \"5px\"\nexport const radius = \"5px\"\nexport default styled.div`\n    ${shadow};\n    position: relative;\n    padding:5px;\n    margin:${margin};\n    border-radius:${radius};\n    background-color:${props => props.theme.colors.containerImageColor};\n    transition:${transition};\n\n    &:hover {\n        div.overflow {\n            height:100%;\n        }\n    }\n`\n","import {css} from 'styled-components'\nimport {xs, sm, md , lg} from './widths'\n\n\n/*Son los mediaquerys para cambiar el tamaño de la imagen de las skills dependiendo del\ntamaño de la pantalla.*/\nexport default css`\n\n    // xs\n    @media only screen and (max-width: ${xs}) {\n        \n        height:150px;\n        width:85px;\n    }\n\n    //sm\n    @media only screen and (min-width: ${sm})   {\n        height:125px;\n        width:80px;\n    }\n\n    //md\n    @media only screen and (min-width: ${md})   {\n        \n        height:160px;\n        width:85px;\n    }\n\n    // >lg\n    @media only screen and (min-width: ${lg}) {\n        height:100px;\n        width:100px;\n    }\n\n   \n`","import styled from 'styled-components'\nimport Img from 'gatsby-image'\nimport shadow from '../components/shadow'\nimport transition from '../transitions/colorTransition'\nimport mediaquerys from '../mediaquerys/imageSkillMediaquery'\n\n\nexport const radius =\"50%\"\nexport default styled(Img)`\n    border-radius:${radius};\n    height:100px;\n    width:100px;\n    ${shadow};\n    margin-top:10px;\n    border: solid 2px white;\n    transition:${transition};\n    ${mediaquerys};\n`","import {css} from 'styled-components'\nimport {xs, sm, md , lg} from './widths'\n\n\n/*Son los mediaquerys para cambiar la decripción de las skills dependiendo del\ntamaño de la pantalla.*/\nconst margin = \"10px\"\nexport default css`\n\n    // xs\n    @media only screen and (max-width: ${xs}) {\n        position: initial;\n        height:100%;\n        background-color:${props => props.theme.colors.containerImageColor};\n\n        p {\n            color:${props => props.theme.colors.skillDescriptionColor};;\n        }\n\n        &::before {\n            content:\"\";\n            display:block;\n            height:2px;\n            width:100%;\n            background-color:#F1EFEF;\n            margin-bottom:${margin};\n        }\n    }\n\n    //sm\n    @media only screen and (min-width: ${sm})   {\n        position: initial;\n        height:100%;\n        background-color:${props => props.theme.colors.containerImageColor};\n        p {\n            color:${props => props.theme.colors.skillDescriptionColor};;\n        }\n        &::before {\n            content:\"\";\n            display:block;\n            height:2px;\n            width:100%;\n            background-color:#F1EFEF;\n            margin-bottom:${margin};\n        }\n    }\n\n    //md\n    @media only screen and (min-width: ${md})   {\n        position: initial;\n        height:100%;\n        background-color:${props => props.theme.colors.containerImageColor};\n        p {\n            color:${props => props.theme.colors.skillDescriptionColor};;\n        }\n\n        &::before {\n            content:\"\";\n            display:block;\n            height:2px;\n            width:100%;\n            background-color:#F1EFEF;\n            margin-bottom:${margin};\n        }\n    }\n\n    // >lg\n    @media only screen and (min-width: ${lg}) {\n        position: absolute;\n        height:0px;\n        background-color:rgba(0,0,0,0.8);\n        p {\n            color:white;\n        }\n        &::before {\n            content:\"\";\n            display:initial;\n            height:0px;\n            width:0px;\n        }\n    }\n\n   \n`","import styled from 'styled-components'\nimport {radius} from './cardSkillContainer'\nimport transition from '../transitions/colorTransition'\nimport mediaquerys from '../mediaquerys/descriptionSkillMediaquery'\n\n\nexport default styled.div`\n    position: absolute;\n    bottom:0px;\n    width:100%;\n    height:0px;\n    overflow:hidden;\n    background-color:rgba(0,0,0,0.8);\n    border-radius:${radius};\n    transition:${transition};\n\n    ${mediaquerys};\n`","import React from 'react'\nimport Grid from '../styled/components/gridProjects'\nimport SEO from './seo'\nimport sections from './sidebar/sections'\nimport getTitleSection from './sidebar/getTitleSection'\nimport Sidebar from './sidebar/Sidebar'\nimport Fade from 'react-reveal/Fade';\nimport SectionTitle from '../styled/components/sectionTitle'\nimport TextContainer from '../styled/components/pContainer'\nimport CardSkill from '../styled/components/cardSkillContainer'\nimport ImageSkill from '../styled/components/imageSkill'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Skilloverflow from '../styled/components/skillOverflow'\n\n\nexport default () => (<StaticQuery\n    query={graphql`\n    query {\n        allStrapiTecnologias{\n        nodes {\n            titulo\n            descripcion\n            categorias {\n                nombre\n              }\n            imagen {\n                childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n        }\n        }\n    }`}\n    \n    render={skills => (\n        <>\n            <SEO title=\"Proyectos\" />\n            <Grid>\n                <Sidebar haveMain haveSecundary />\n                <Fade>\n                    <div style={{ marginTop: \"80px\" }} className=\"content\">\n                        <section id=\"main\" >\n                            <div className={`d-flex justify-content-center mt-3`}>\n                                <SectionTitle>Tecnologías principales</SectionTitle>\n                            </div>\n                            <div className=\"row mt-3 justify-content-center\">\n                                {\n                                    skills.allStrapiTecnologias?.nodes?.filter(s => s.categorias.map(c => c.nombre).includes(\"main\")).map((skill, i) => (\n                                        <CardSkill key={i} className=\"d-flex flex-column align-items-center justify-content-center \n                                                                    mx-2 my-2 col-8 col-sm-5 col-md-3 col-lg-3 col-xl-3\">\n                                            <ImageSkill alt={skill.titulo} fluid={skill.imagen?.childImageSharp?.fluid} />\n                                            <TextContainer className=\"subtitle text-center mx-5 my-3\">\n                                                <p>\n                                                    {skill.titulo}\n                                                </p>\n                                            </TextContainer>\n                                            <Skilloverflow className=\"overflow\">\n                                                <p className=\"text-center mx-2 my-2 \">\n                                                    {skill.descripcion}\n                                                </p>\n                                            </Skilloverflow>\n                                        </CardSkill>\n                                    ))\n                                }\n                            </div>\n                        </section>\n                        <section id=\"secondary\" >\n                            <div className={`d-flex justify-content-center mt-3`}>\n                                <SectionTitle>Tecnologías secundarias</SectionTitle>\n                            </div>\n                            <div className=\"row mt-3 justify-content-center\">\n                                {\n                                    skills.allStrapiTecnologias?.nodes?.filter(s => s.categorias.map(c => c.nombre).includes(\"secondary\")).map((skill, i) => (\n                                        <CardSkill key={i} className=\"d-flex flex-column align-items-center justify-content-center \n                                                                    mx-2 my-2 col-8 col-sm-5 col-md-3 col-lg-3 col-xl-3\">\n                                            <ImageSkill alt={skill.titulo} fluid={skill.imagen?.childImageSharp?.fluid} />\n                                            <TextContainer className=\"subtitle text-center mx-5 my-3\">\n                                                <p>\n                                                    {skill.titulo}\n                                                </p>\n                                            </TextContainer>\n                                            <Skilloverflow className=\"overflow\">\n                                                <p className=\"text-center mx-2 my-2 \">\n                                                    {skill.descripcion}\n                                                </p>\n                                            </Skilloverflow>\n                                        </CardSkill>\n                                    ))\n                                }\n                            </div>\n                        </section>\n                        {sections.map((section, i) => (\n                            <section key={i} id={section}>\n                                <div className={`d-flex justify-content-center mt-3`}>\n                                    <SectionTitle>{getTitleSection(section)}</SectionTitle>\n                                </div>\n                                <div className=\"row mt-3 justify-content-center\">\n                                    {skills.allStrapiTecnologias?.nodes?.filter(s => s.categorias.map(c => c.nombre).includes(section)).length !== 0 ?\n                                        skills.allStrapiTecnologias?.nodes?.filter(s => s.categorias.map(c => c.nombre).includes(section)).map((skill, i) => (\n                                            <CardSkill key={i} className=\"d-flex flex-column align-items-center justify-content-center \n                                                                    mx-2 my-2 col-8 col-sm-5 col-md-3 col-lg-3 col-xl-3\">\n                                                <ImageSkill alt={skill.titulo} fluid={skill.imagen?.childImageSharp?.fluid} />\n                                                <TextContainer className=\"subtitle text-center mx-5 my-3\">\n                                                    <p>\n                                                        {skill.titulo}\n                                                    </p>\n                                                </TextContainer>\n                                                <Skilloverflow className=\"overflow\">\n                                                    <p className=\"text-center mx-2 my-2 \">\n                                                        {skill.descripcion}\n                                                    </p>\n                                                </Skilloverflow>\n                                            </CardSkill>\n                                        )) : (<TextContainer className=\"text-center my-3\">\n                                            <p>Aún no hay proyectos de este tipo, me estoy preparando <span role=\"img\" aria-label=\"smiles\">😅😃</span></p>\n                                        </TextContainer>)}\n                                </div>\n                            </section>\n                        ))}\n                    </div>\n                </Fade>\n            </Grid>\n        </>\n    )}/>)","import React from \"react\";\nimport Habilidades from '../components/habilidades'\n\nexport default () => (<Habilidades/>)"],"sourceRoot":""}